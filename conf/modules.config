/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
            samtools: fastq, fixmate, merge, sort, view

----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: 'copy',
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:.*:PREPARE_GENOME:.*' {
        publishDir = [
            path: { "${params.outdir}/genome/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:.*:PREPARE_GENOME:BWAMEM2_INDEX' {
        publishDir = [
            path: { "${params.outdir}/genome" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:.*:PREPARE_GENOME:GUNZIP' {
        publishDir = [
	    path: { "${params.outdir}/genome" },
	    mode: 'copy',
  	    saveAs: { filename -> null }
	]
    }

    withName: '.*:.*:ALIGN_HIC:.*' {
        publishDir = [
            path: { "${params.outdir}/read_mapping/hic" },
            mode: 'copy',
            saveAs: { filename -> null }
        ]
    }

    withName: '.*:.*:ALIGN_HIC:CONVERT_STATS_.*' {
        publishDir = [
            path: { "${params.outdir}/read_mapping/hic" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:.*:ALIGN_ILLUMINA:.*' {
        publishDir = [
            path: { "${params.outdir}/read_mapping/illumina" },
            mode: 'copy',
            saveAs: { filename -> null }
        ]
    }

    withName: '.*:.*:ALIGN_ILLUMINA:CONVERT_STATS_.*' {
        publishDir = [
            path: { "${params.outdir}/read_mapping/illumina" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

   withName: '.*:.*:ALIGN_PACBIO:.*' {
        publishDir = [
            path: { "${params.outdir}/read_mapping/pacbio" },
            mode: 'copy',
            saveAs: { filename -> null }
        ]
    }

    withName: '.*:.*:ALIGN_PACBIO:CONVERT_STATS_.*' {
        publishDir = [
            path: { "${params.outdir}/read_mapping/pacbio" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:.*:ALIGN_ONT:.*' {
        publishDir = [
            path: { "${params.outdir}/read_mapping/ont" },
            mode: 'copy',
            saveAs: { filename -> null }
        ]
    }
    
    withName: '.*:.*:ALIGN_ONT:CONVERT_STATS_.*' {
        publishDir = [
            path: { "${params.outdir}/read_mapping/ont" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: SAMTOOLS_FASTQ {
	    ext.args = '-F0xB00 -nt'
    }

    withName: '.*:.*:ALIGN_HIC:BWAMEM2_MEM' {
	    ext.args = '-5SPCp'
    }

    withName: SAMTOOLS_FIXMATE {
        ext.args = '-m'
        ext.prefix = { "${meta.id}.fixmate" }
    }

    withName: SAMTOOLS_COLLATE {
        ext.prefix = { "${meta.id}.collate" }
    }

    withName: SAMTOOLS_SORT {
        ext.prefix = { "${meta.id}.sort" }
    }

    withName: SAMTOOLS_MARKDUP {
        ext.prefix = { "${meta.id}.markdup" }
    }

    withName: '.*:.*:ALIGN_PACBIO:MINIMAP2_ALIGN' {
        ext.args = '-ax map-hifi'
    }

    withName: SAMTOOLS_MERGE {
        ext.prefix = { "${meta.id}.merge" }
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            pattern: '*_versions.yml'
        ]
    }

}
