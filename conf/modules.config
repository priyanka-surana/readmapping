/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    withName: SAMTOOLS_FASTQ {
        ext.args = '-F 0x200 -nt'
    }

    withName: '.*:.*:ALIGN_HIC:BWAMEM2_MEM' {
        ext.args = { "-5SPCp -R ${meta.read_group}" }
    }

    withName: '.*:.*:ALIGN_ILLUMINA:BWAMEM2_MEM' {
        ext.args = { "-R ${meta.read_group}" }
    }

    withName: SAMTOOLS_SORT {
        ext.prefix = { "${meta.id}.sort" }
    }

    withName: SAMTOOLS_MERGE {
        ext.args = { "-c -p" }
        ext.prefix = { "${meta.id}.merge" }
    }

    withName: SAMTOOLS_COLLATE {
        ext.prefix = { "${meta.id}.collate" }
    }

    withName: SAMTOOLS_FIXMATE {
        ext.args = '-m'
        ext.prefix = { "${meta.id}.fixmate" }
    }

    withName: SAMTOOLS_MARKDUP {
        ext.prefix = { "${meta.id}.markdup" }
    }

    withName: BLAST_BLASTN {
        ext.args = '-task blastn -reward 1 -penalty -5 -gapopen 3 -gapextend 3 -dust yes -soft_masking true -evalue .01 -searchsp 1750000000000 -outfmt 6'
    }

    withName: SAMTOOLS_CONVERT {
        ext.args = "-be '[rq]>=0.99' -x fi -x fp -x ri -x rp --write-index"
    }

    withName: SAMTOOLS_FILTER {
        ext.prefix = { "${meta.id}.filter" }
    }

    withName: '.*:.*:ALIGN_HIFI:MINIMAP2_ALIGN' {
        ext.args = { "-ax map-hifi --cs=short -R ${meta.read_group}" + (meta.genome_size > 4294967296 ? (" -I" + Math.ceil(meta.genome_size/1073741824)+"G") : "") }
    }

    withName: '.*:.*:ALIGN_CLR:MINIMAP2_ALIGN' {
        ext.args = { "-ax map-pb -R ${meta.read_group}" }
    }

    withName: '.*:.*:ALIGN_ONT:MINIMAP2_ALIGN' {
        ext.args = { "-ax map-ont -R ${meta.read_group}" }
    }

    withName: '.*:CONVERT_STATS:SAMTOOLS_VIEW' {
        ext.prefix = { "${fasta.baseName}.${meta.datatype}.${meta.id}" }
        ext.args   = '--output-fmt cram --write-index'
    }

    withName: SAMTOOLS_FLAGSTAT {
        ext.prefix = { "${bam.baseName}" }
    }

    withName: SAMTOOLS_IDXSTATS {
        ext.prefix = { "${bam.baseName}" }
    }

    withName: SAMTOOLS_STATS {
        ext.prefix = { "${input.baseName}" }
    }

    withName: CRUMBLE {
        ext.prefix = { "${input.baseName}.crumble" }
        ext.args   = '-y pbccs -O cram'
        publishDir = [
            path: { "${params.outdir}/read_mapping/pacbio" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info/readmapping" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:ALIGN_HIC:MARKDUP_STATS:CONVERT_STATS:.*' {
        publishDir = [
            path: { "${params.outdir}/read_mapping/hic" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:ALIGN_ILLUMINA:MARKDUP_STATS:CONVERT_STATS:.*' {
        publishDir = [
            path: { "${params.outdir}/read_mapping/illumina" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:ALIGN_HIFI:CONVERT_STATS:.*' {
        publishDir = [
            path: { "${params.outdir}/read_mapping/pacbio" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:ALIGN_CLR:CONVERT_STATS:.*' {
        publishDir = [
            path: { "${params.outdir}/read_mapping/pacbio" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:ALIGN_ONT:CONVERT_STATS:.*' {
        publishDir = [
            path: { "${params.outdir}/read_mapping/ont" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info/readmapping" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}
